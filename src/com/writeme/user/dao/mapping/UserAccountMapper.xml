<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.writeme.user.dao.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.writeme.user.domain.UserAccount">
    <id column="userID" jdbcType="INTEGER" property="userID" />
    <result column="nickName"       property="nickName" />
    <result column="password"    	property="password" />
    <result column="email"   	 	property="email" />
    <result column="address"  	 	property="address" />
    <result column="birthDay" 	    property="birthDay" />
    <result column="registerTime"  	property="registerTime" />
    <result column="lastIP"  		property="lastIP" />
    <result column="accountStat"    property="accountStat" />
    <result column="userFlag"  		property="userFlag" />
    <result column="lastLoginTime"  property="lastLoginTime" />
    <result column="gender" 		property="gender" /> 
  </resultMap>
  <sql id="Base_Column_List">
    userID, nickName, password, email, address, birthDay, registerTime, lastIP, accountStat, 
    groupFlag
  </sql>
  
  <insert id="insertNewUser" parameterType="com.writeme.user.domain.UserAccount" useGeneratedKeys="true" keyProperty="userID" >
    insert into USERINFO (nickName, password, 
      email, registerTime, lastIP,lastLoginTime,accountStat, 
      userFlag)
    values (#{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR},
      #{registerTime,jdbcType=TIMESTAMP}, #{lastIP,jdbcType=VARCHAR},#{lastLoginTime}, #{accountStat,jdbcType=INTEGER}, 
      #{userFlag,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.writeme.user.domain.UserAccount" useGeneratedKeys="true" keyProperty="userID">
    insert into USERINFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        nickName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="birthday != null">
        birthDay,
      </if>
      <if test="registertime != null">
        registerTime,
      </if>
      <if test="lastip != null">
        lastIP,
      </if>
      <if test="accountstat != null">
        accountStat,
      </if>
      <if test="groupflag != null">
        groupFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastip != null">
        #{lastip,jdbcType=VARCHAR},
      </if>
      <if test="accountstat != null">
        #{accountstat,jdbcType=INTEGER},
      </if>
      <if test="groupflag != null">
        #{groupflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  
  <update id="updateMultiField" parameterType="com.writeme.user.domain.UserAccount">
    update useraccount
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthDay = #{birthday,jdbcType=DATE},
      </if>
      <if test="registertime != null">
        registerTime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastip != null">
        lastIP = #{lastip,jdbcType=VARCHAR},
      </if>
      <if test="accountstat != null">
        accountStat = #{accountstat,jdbcType=INTEGER},
      </if>
      <if test="groupflag != null">
        groupFlag = #{groupflag,jdbcType=INTEGER},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
      and nickName = #{nickname,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByNickName" parameterType="string" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
  	from USERACCOUNT
  	where nickName = #{nickName}
  </select>
  
  <select id="selectByUserID" parameterType="int" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
  	FROM USERACCOUNT
  	WHERE userID = #{userID}
  </select>
  
</mapper>